/**
 * Configuration file for apeman projects.
 * @see https://github.com/apeman-labo/apeman
 */

"use strict";

module.exports = {
    /** Current working directory path */
    get $cwd() {
        return __dirname;
    },
    /** Parent Apemanfile. */
    get $parent() {
        return require('../../Apemanfile.js');
    },
    /** Prototype apps */
    get $proto() {
        return [
            require('apeman-proto-abstract'),
            require('apeman-proto-basic'),
            require('apeman-proto-scss'),
            require('apeman-proto-sub')
        ]
    },
    /**
     * apeman app configurations.
     * @see https://github.com/apeman-labo/apeman-app
     */
    get $apps() {
        var env = require('../../env');


        var route = require('apeman-app-route'),
            header = require('apeman-app-header'),
            lang = require('apeman-app-lang'),
            json = require('apeman-app-json'),
            delay = require('apeman-app-delay'),
            log = require('apeman-app-log');
        return {
            '/': [
                header(),
                lang(),
                json(),
                delay(0),
                log(env('log').UI, {}), //TODO move to env
                route({})
            ]
        }
    },
    /**
     * apeman tmpl configurations.
     * @see https://github.com/apeman-labo/apeman-tmpl
     */
    get $tmpls() {
        return {
        }
    },
    /**
     * apeman task configurations.
     * @see https://github.com/apeman-labo/apeman-task
     */
    get $tasks() {
        var mkdir = require('apeman-task-mkdir'),
            jsx = require('apeman-task-jsx'),
            coz = require('apeman-task-coz'),
            tmpl = require('apeman-task-tmpl'),
            symlink = require('apeman-task-symlink');
        return {
            'build': [
                'cmd:tmpl',
                'struct',
                'render',
                'compile'
            ],
            'compile': [
                'scss:compile'
            ],
            'coz:render': coz([]),
            'render:tmpl': tmpl({}),
            'struct': [
                'fs:mkdir',
                'fs:symlink'
            ],
            'fs:mkdir': mkdir([
                'public',
                'src',
                'src/scss',
                'src/jsx',
                'test'
            ]),
            'fs:symlink': [
                symlink('../../asset/fonts', 'public/fonts'),
                symlink('../../asset/images', 'public/images'),
                symlink('../../var/log/ui-log', 'log')
            ]
        }
    },
    /**
     * apeman watch configurations.
     * @see https://github.com/apeman-labo/apeman-watch
     */
    get $watches() {
        return {
            'all': [
                'scss-to-compile'
            ],
            'scss-to-compile': {
                pattern: 'src/scss/*.scss',
                action: function () {
                    console.log('scss changed!');
                }
            }
        }
    }
};


if (!module.parent) {
    // Execute this file as apeman bin.
    require('apeman').cli(process.argv);
}
