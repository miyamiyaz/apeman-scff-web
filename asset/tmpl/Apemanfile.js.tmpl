/**
 * Configuration file for apeman projects.
 * @see https://github.com/apeman-labo/apeman
 */

"use strict";

module.exports = {
    /** Current working directory path */
    get $cwd() {
        return __dirname;
    },
    /** Package data. */
    get $pkg() {
        return require('./package.json');
    },
    /** Prototype projects */
    get $proto() {
        return [
            require('apeman-proto-abstract'),
            require('apeman-proto-basic'),
            require('apeman-proto-git'),
            require('apeman-proto-sure'),
            require('apeman-proto-npm'),
            require('apeman-proto-locale'),
            require('apeman-proto-coverage'),
            require('apeman-proto-codeclimate'),
            require('apeman-proto-env'),
            require('apeman-proto-travis'),
            require('apeman-proto-asset'),
            require('apeman-proto-db'),
            require('apeman-proto-ionicons'),
            require('apeman-proto-fontawesome')
        ];
    },
    /** Children projects */
    get $children() {
        return {
            'api-app': require('./app/api/Apemanfile'),
            'ui-app': require('./app/ui/Apemanfile'),
            'browser-lib': require('./lib/browser-lib/Apemanfile'),
            'node-lib': require('./lib/node-lib/Apemanfile')
        }
    },
    /**
     * apeman tmpl configurations.
     * @see https://github.com/apeman-labo/apeman-tmpl
     */
    get $tmpls() {
        var dot = require('apeman-tmpl-dot'),
            readme = require('apeman-tmpl-readme');

        return {
            'doc/readme/01 - Requirements.md.hbs': readme({type: 'requirementsSection'}),
            'doc/readme/02 - Setup.md.hbs': readme({type: 'setupSection'}),
            '.README.md.bud': dot({type: 'readmeMdBud'}),
            '.LICENSE.md.bud': dot({type: 'licenseBud'})
        }
    },
    /**
     * apeman task configurations.
     * @see https://github.com/apeman-labo/apeman-task
     */
    get $tasks() {
        var chmod = require('apeman-task-chmod'),
            mkdir = require('apeman-task-mkdir'),
            task = require('apeman-task-task'),
            tmpl = require('apeman-task-tmpl'),
            coz = require('apeman-task-coz'),
            execcli = require('apeman-task-execcli'),
            symlink = require('apeman-task-symlink'),
            bower = require('apeman-task-bower'),
            watch = require('apeman-task-watch');

        return {
            'build': [
                'fs:mkdir',
                'fs:chmod',
                'fs:symlink',
                'coz:render',
                'api-app#build',
                'ui-app#build',
                'browser-lib#build',
                'node-lib#build'
            ],
            'cover': [
                'coverage:test'
            ],
            'setup': [
                'npm:install',
                'ionicons:install',
                'ionicons:extract',
                'fontawesome:install',
                'fontawesome:extract',
                'tmpl:render',
                'build'
            ],
            'fs:mkdir': [
                mkdir([
                    'app',
                    'bin',
                    'ci',
                    'doc',
                    'lib',
                    'tmp',
                    'var'
                ]),
                'locale:mkdir',
                'db:mkdir',
                'asset:mkdir'
            ],
            'fs:symlink': [],
            'test': [],
            'release': [
                'sure:release',
                'build',
                'test',
                'git:tag',
                'npm:publish',
                'npm:versionup',
                'git:push'
            ],
            'update': [
                'npm:update'
            ],
            'travis:build': [
                'setup',
                'build',
                'test',
                'cover',
                'codeclimate:send'
            ]
        }
    }
};


if (!module.parent) {
    // Execute this file as apeman bin.
    require('apeman').cli(process.argv);
}
